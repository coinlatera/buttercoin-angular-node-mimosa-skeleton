// Generated by CoffeeScript 1.6.3
(function() {
  var engines, express;

  express = require('express');

  engines = require('consolidate');

  exports.startServer = function(config, callback) {
    var app, options, port, server, _ref, _ref1;
    port = process.env.PORT || config.server.port;
    app = express();
    server = app.listen(port, function() {
      return console.log("Express server listening on port %d in %s mode", server.address().port, app.settings.env);
    });
    app.configure(function() {
      app.disable('x-powered-by');
      app.set('port', port);
      app.set('views', config.server.views.path);
      app.engine(config.server.views.extension, engines[config.server.views.compileWith]);
      app.set('view engine', config.server.views.extension);
      app.use(express.favicon());
      app.use(express.cookieParser());
      app.use(express.bodyParser());
      app.use(express.methodOverride());
      app.use(express.compress());
      app.use(config.server.base, app.router);
      return app.use(express["static"](config.watch.compiledDir));
    });
    app.configure('development', function() {
      return app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
    });
    app.configure('production', function() {
      return app.use(express.errorHandler());
    });
    options = {
      reload: ((_ref = config.liveReload) != null ? _ref.enabled : void 0) != null,
      optimize: (_ref1 = config.isOptimize) != null ? _ref1 : false,
      cachebust: process.env.NODE_ENV !== "production" ? "?b=" + ((new Date()).getTime()) : ''
    };
    app.get('/', function(req, res) {
      return res.render('index', options);
    });
    return callback(server);
  };

}).call(this);
